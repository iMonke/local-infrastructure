Vagrant.configure("2") do |config|
  config.vagrant.plugins = "vagrant-reload"

  config.vm.box = "centos/7"
  config.vm.define "monke-host"
  config.vm.network "private_network", ip: "192.168.128.10"
  config.vm.synced_folder "./monke-services", "/home/vagrant/monke-services"
  config.vm.synced_folder "./local-infrastructure", "/home/vagrant/local-infrastructure"
  config.vm.provider "virtualbox" do |box|
      box.memory = "2048"
  end

  config.vm.provision "shell", inline: <<-SHELL
    # configure mariadb repo to get mariadb 10+
    curl https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash

    # install and configure yum packages
    yum update -y
    # this has to be installed first
    # or nginx won't install for some reason
    yum install -y epel-release
    yum install -y git docker MariaDB-server nginx mysql

    # set up systemd things
    systemctl stop firewalld
    systemctl disable firewalld
    systemctl start docker.service mariadb
    systemctl enable docker.service mariadb

    # set up a docker group
    groupadd docker
    usermod -aG docker vagrant

    # install and configure docker-compose
    curl -sSL "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)"  -o /usr/bin/docker-compose
    chmod +x /usr/bin/docker-compose

    # create a sync script
    cat <<EOF > /home/vagrant/sync
for it in \$(ls monke-services | grep -v Vagrantfile); do
  docker build "./monke-services/\$it" -t "gastrodon/imonke-\$it" -q
done
EOF
    chmod +x /home/vagrant/sync
    chown vagrant /home/vagrant/sync

    # populate docker repos
    /home/vagrant/sync
    docker-compose -f /home/vagrant/local-infrastructure/compose/docker-compose.yml pull
    docker pull gastrodon/ferrothorn

    # mariadb secure connection
    /usr/bin/mariadb-secure-installation <<EOF

y
y
foobar2000
foobar2000
y
y
y
y
EOF

    # tell mariadb to listen remotely
    printf "[galera]\nbind-address=0.0.0.0" >> /etc/my.cnf

    # set mariadb users
    mysql -uroot -pfoobar2000 -h127.0.0.1 <<EOF
CREATE DATABASE imonke;
CREATE USER imonke;
GRANT ALL PRIVILEGES ON imonke.* TO 'imonke'@'%';
FLUSH PRIVILEGES;

CREATE DATABASE ferro;
CREATE USER ferro;
GRANT ALL PRIVILEGES ON ferro.* TO 'ferro'@'%';
FLUSH PRIVILEGES;
EOF

    # set up nginx
    cd local-infrastructure/nginx
    rm -rf /etc/nginx
    ln -s "$(pwd)/nginx" "/etc/nginx"

    # populate a .env for docker-compose
    cat <<EOF > .env
MONKEBASE_CONNECTION="imonke@tcp(192.168.128.10)/imonke"
FERROTHORN_HOST="http://192.168.128.10:8000"
FERROTHORN_SECRET=ferrothorn_dev
EOF
  SHELL

  config.vm.provision :reload

  config.vm.provision "shell", run: "always", inline: <<-SHELL
    su vagrant

    # set up ferrothorn
    docker run \
        -e "FERROTHORN_CONNECTION=ferro@tcp(192.168.128.10)/ferro" \
        -e "FERROTHORN_ROOT=/files" \
        -e "FERROTHORN_SECRET=ferrothorn_dev" \
        -p 8000:8000 \
        -d \
        gastrodon/ferrothorn

    # serve imonke
    cd local-infrastructure/compose
    docker-compose up -d
    sudo pkill nginx
    sudo nginx
  SHELL

end
